name: CI

on:
  pull_request:
    types: [opened, synchronize, labeled]
  push:
    branches:
      - master
      - 'build-docker/**'
      - 'build-zip/**'

jobs:
  build:
    runs-on: ubuntu-latest

    # if build was triggered by labeled action we want to execute it only if it is build_image label
    if: github.event.action != 'labeled' || github.event.label.name == 'build_image' || github.event.label.name == 'build_zip'
    
    steps:
      - uses: actions/checkout@v2

      # setup JDK 11
      - uses: actions/setup-java@v1
        with:
          java-version: 11

      # setup node 12.x
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      # cache gradle wrapper files, reset cache if we update gradle-wrapper version in gradle-wrapper.properties file
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      # cache dependencies resolved by gradle, reset cache when build.gradle is updated
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      # cache dependencies resolved by npm, reset cache when package-lock.json us updated
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # run tests with gradle only if no build_image label is present and we are not building master branch, otherwise tests are run as part of buildZip task
      - name: test
        if: (contains(github.event.pull_request.labels.*.name, 'build_image') == false && github.ref != 'refs/heads/master') || contains(github.ref, 'build-docker')
        uses: eskatos/gradle-command-action@v1
        env:
          CHROMIUM_BIN: /usr/bin/google-chrome
        with:
          arguments: test

      - name: Set current date as env variable
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # build war only if build_image label is present and build_zip don't
      - name: war
        if: contains(github.ref, 'build-docker') || (contains(github.event.pull_request.labels.*.name, 'build_image') && !contains(github.event.pull_request.labels.*.name, 'build_zip'))
        uses: eskatos/gradle-command-action@v1
        env:
          CHROMIUM_BIN: /usr/bin/google-chrome
          ORG_GRADLE_PROJECT_buildVersion: ${{env.DATE}}_${{github.sha}}
        with:
          arguments: war

      # build zip only if build_zip label is present or we are building from master
      - name: zip
        if: contains(github.event.pull_request.labels.*.name, 'build_zip') || github.ref == 'refs/heads/master'
        uses: eskatos/gradle-command-action@v1
        env:
          CHROMIUM_BIN: /usr/bin/google-chrome
          ORG_GRADLE_PROJECT_buildVersion: ${{env.DATE}}_${{github.sha}}
        with:
          arguments: buildZip

      

      # upload zip bundle 
      - if: contains(github.event.pull_request.labels.*.name, 'build_zip') || github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: zip-bundle
          path: build/output/researchspace-*
